apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm:ss'Z'", TimeZone.getTimeZone("UTC"))

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def debugKeystorePropertiesFile = rootProject.file("debugKeystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def debugKeystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
debugKeystoreProperties.load(new FileInputStream(debugKeystorePropertiesFile))

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "String", "HW_VERSION", "\"2.0\""

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "default"

    productFlavors {
        mockedio {
            dimension "default"
            buildConfigField "boolean", "MOCK_MODE", "true"
        }

        pifacedigital {
            dimension "default"
            buildConfigField "boolean", "MOCK_MODE", "false"
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'org/joda/time/format/*.properties'
    }

    signingConfigs {
        debug {
            keyAlias debugKeystoreProperties['keyAlias']
            keyPassword debugKeystoreProperties['keyPassword']
            storeFile file(debugKeystoreProperties['storeFile'])
            storePassword debugKeystoreProperties['storePassword']
        }
    }

}

dependencies {
    implementation project(path: ':pifacedigital2')
    implementation project(path: ':hw-gateway')
    implementation project(path: ':domain')
    implementation(project(path: ':client-api')) {
        exclude module: 'joda-time'
    }
    implementation(project(path: ':http-server')) {
        exclude module: 'joda-time'
    }
    implementation(project(path: ':data')) {
        exclude module: 'joda-time'
    }
    implementation(project(path: ':local-storage')) {
        exclude module: 'joda-time'
    }


    def cmlDependencies = rootProject.ext.cmlDependencies

    implementation cmlDependencies.javaxAnnotation
    implementation cmlDependencies.javaxInject
    implementation cmlDependencies.rxKotlin
    implementation cmlDependencies.rxAndroid
    implementation cmlDependencies.kotlin
    implementation cmlDependencies.kotlinLogging
    implementation cmlDependencies.greenEventBus
    implementation(cmlDependencies.jodaTimeAndroid) {
        exclude module: 'joda-time'
    }
    implementation cmlDependencies.dagger
    implementation cmlDependencies.daggerSupport
    implementation cmlDependencies.nanohttpd
    implementation cmlDependencies.jodaTime


    // implementation group: 'com.evernote', name: 'android-job', version: '1.2.6'


    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.github.tony19:logback-android-core:1.1.1-6'
    implementation('com.github.tony19:logback-android-classic:1.1.1-6') {
        // workaround issue #73
        exclude group: 'com.google.android', module: 'android'
    }


    implementation(cmlDependencies.jodaTimeGson) {
        exclude group: 'joda-time', module: 'joda-time'
    }

    implementation(cmlDependencies.easyFlow) {
        exclude group: "org.slf4j"
    }

    kapt mobileUiDependencies.daggerCompiler
    kapt mobileUiDependencies.daggerProcessor

    compileOnly 'com.google.android.things:androidthings:1.0'
}
